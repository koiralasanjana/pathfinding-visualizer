{"ast":null,"code":"var _jsxFileName = \"F:\\\\Deerwalk\\\\semester-5\\\\Micro Project\\\\my-project\\\\pathfinding-visualizer-master\\\\src\\\\animations\\\\Demo.js\";\nimport React from \"react\";\nimport \"./demo.css\";\nimport { Route, NavLink // BrowserRouter as Router,\n, HashRouter as Router, Switch } from \"react-router-dom\";\n\nclass Demo extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-lg\",\n      id: \"visualizePathButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      activeClassName: \"active\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Visaulize Paths !\")), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        backgroundColor: \"lightblue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"How to use this tool ?\", React.createElement(\"small\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"..and what the heck is A* ??\")), React.createElement(\"blockquote\", {\n      className: \"blockquote text-center font-italic font-weight-bold\",\n      style: {\n        backgroundColor: \"ghostwhite\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Shortest Distance between two points is a straight line.\"), React.createElement(\"footer\", {\n      className: \"blockquote-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"cite\", {\n      title: \"Source Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Archimedes\"))), React.createElement(\"h5\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" \", React.createElement(NavLink, {\n      activeClassName: \"active\",\n      to: \"/article\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Click Here\"), \" \", \"if you want to learn more about path finding algorithms ..\")), React.createElement(\"div\", {\n      id: \"parentInfoDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"alignHelperDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"wallNodeImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" \"), \" Wall Node\"), React.createElement(\"div\", {\n      id: \"alignHelperDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"emptyNodeImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" \"), \" Unvisited Node\"), React.createElement(\"div\", {\n      id: \"alignHelperDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"visitedNodeImage1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" \")), React.createElement(\"div\", {\n      id: \"alignHelperDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"visitedNodeImage2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" \"), \" Visited Nodes\"), React.createElement(\"div\", {\n      id: \"alignHelperDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"startNodeImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" \"), \" Start Node\"), React.createElement(\"div\", {\n      id: \"alignHelperDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"finishNodeImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" \"), \" Finish Node\"), React.createElement(\"div\", {\n      id: \"alignHelperDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"bombNodeImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" \"), \" Bomb Node\"), React.createElement(\"div\", {\n      id: \"alignHelperDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"shortestPathImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \"), \"Shortest Path Node\")), React.createElement(\"div\", {\n      id: \"listItems\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" \", \"1. Click and drag on the grid to draw walls, so that algorithm doesn't go through the walls and find shortest path to finish node around it .\")), React.createElement(\"div\", {\n      id: \"drawingWallsImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"2. Select an algorithm to visualize !\")), React.createElement(\"div\", {\n      id: \"selectAlgorithmImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"3. After this the algorithm finds the shortest path to the finish node according to the selected algorithm.\")), React.createElement(\"div\", {\n      id: \"path1SampleImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"4. Click on Add Bomb to add a bomb Node on the grid.\")), React.createElement(\"div\", {\n      id: \"clickOnBombNodeImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"5. When Bomb Node is active the algorithm finds the path first to bombNode to deactivate it and then to the finish node.\")), React.createElement(\"div\", {\n      id: \"travelThroughBombNode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"6. You can also select from one of some built-in mazes to draw walls on the grid.\")), React.createElement(\"div\", {\n      id: \"selectMazes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Here are few sample snippets ...\")), React.createElement(\"div\", {\n      id: \"sample01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"sample02\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Demo;","map":{"version":3,"sources":["F:/Deerwalk/semester-5/Micro Project/my-project/pathfinding-visualizer-master/src/animations/Demo.js"],"names":["React","Route","NavLink","HashRouter","Router","Switch","Demo","Component","render","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./demo.css\";\nimport {\n  Route,\n  NavLink,\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Switch\n} from \"react-router-dom\";\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <button className=\"btn btn-lg\" id=\"visualizePathButton\">\n          <NavLink activeClassName=\"active\" to=\"/\">\n            Visaulize Paths !\n          </NavLink>\n        </button>\n        <div className=\"container\">\n          <div id=\"header\">\n            <h1 style={{ backgroundColor: \"lightblue\" }}>\n              How to use this tool ?\n              <small className=\"text-muted\">..and what the heck is A* ??</small>\n            </h1>\n            <blockquote\n              className=\"blockquote text-center font-italic font-weight-bold\"\n              style={{ backgroundColor: \"ghostwhite\" }}\n            >\n              <p className=\"mb-0\">\n                Shortest Distance between two points is a straight line.\n              </p>\n              <footer className=\"blockquote-footer\">\n                <cite title=\"Source Title\">Archimedes</cite>\n              </footer>\n            </blockquote>\n            <h5 className=\"font-weight-bold\">\n              {\" \"}\n              <NavLink activeClassName=\"active\" to=\"/article\">\n                Click Here\n              </NavLink>{\" \"}\n              if you want to learn more about path finding algorithms ..\n            </h5>\n          </div>\n          <div id=\"parentInfoDiv\">\n            <div id=\"alignHelperDiv\">\n              <div id=\"wallNodeImage\"> </div> Wall Node\n            </div>\n            <div id=\"alignHelperDiv\">\n              <div id=\"emptyNodeImage\"> </div> Unvisited Node\n            </div>\n            <div id=\"alignHelperDiv\">\n              <div id=\"visitedNodeImage1\"> </div>\n            </div>\n            <div id=\"alignHelperDiv\">\n              <div id=\"visitedNodeImage2\"> </div> Visited Nodes\n            </div>\n            <div id=\"alignHelperDiv\">\n              <div id=\"startNodeImage\"> </div> Start Node\n            </div>\n            <div id=\"alignHelperDiv\">\n              <div id=\"finishNodeImage\"> </div> Finish Node\n            </div>\n            <div id=\"alignHelperDiv\">\n              <div id=\"bombNodeImage\"> </div> Bomb Node\n            </div>\n            <div id=\"alignHelperDiv\">\n              <div id=\"shortestPathImage\"> </div>Shortest Path Node\n            </div>\n          </div>\n          <div id=\"listItems\">\n            <ul className=\"list-group\">\n              <li className=\"list-group-item\">\n                <h6>\n                  {\" \"}\n                  <strong>\n                    {\" \"}\n                    1. Click and drag on the grid to draw walls, so that\n                    algorithm doesn't go through the walls and find shortest\n                    path to finish node around it .\n                  </strong>\n                </h6>\n                <div id=\"drawingWallsImage\"></div>\n              </li>\n              <li className=\"list-group-item\">\n                <h6>\n                  <strong>2. Select an algorithm to visualize !</strong>\n                </h6>\n                <div id=\"selectAlgorithmImage\"></div>\n              </li>\n              <li className=\"list-group-item\">\n                <h6>\n                  <strong>\n                    3. After this the algorithm finds the shortest path to the\n                    finish node according to the selected algorithm.\n                  </strong>\n                </h6>\n                <div id=\"path1SampleImage\"></div>\n              </li>\n              <li className=\"list-group-item\">\n                <h6>\n                  <strong>\n                    4. Click on Add Bomb to add a bomb Node on the grid.\n                  </strong>\n                </h6>\n                <div id=\"clickOnBombNodeImage\"></div>\n              </li>\n              <li className=\"list-group-item\">\n                <h6>\n                  <strong>\n                    5. When Bomb Node is active the algorithm finds the path\n                    first to bombNode to deactivate it and then to the finish\n                    node.\n                  </strong>\n                </h6>\n                <div id=\"travelThroughBombNode\"></div>\n              </li>\n              <li className=\"list-group-item\">\n                <h6>\n                  <strong>\n                    6. You can also select from one of some built-in mazes to\n                    draw walls on the grid.\n                  </strong>\n                </h6>\n                <div id=\"selectMazes\"></div>\n              </li>\n              <li className=\"list-group-item\">\n                <h6>\n                  <strong>Here are few sample snippets ...</strong>\n                </h6>\n                <div id=\"sample01\"></div>\n              </li>\n              <li className=\"list-group-item\">\n                <h6></h6>\n                <div id=\"sample02\"></div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Demo;\n"]},"metadata":{},"sourceType":"module"}