{"ast":null,"code":"export function mazeFour(grid, NUMBER_OF_ROWS, NUMBER_OF_COLS) {\n  let nodes = [];\n  const row = NUMBER_OF_ROWS;\n  const col = NUMBER_OF_COLS;\n\n  for (let i = Math.floor(row / 1.8); i < Math.floor(row / 2.8); i++) {\n    nodes.push(grid[i][Math.floor(col / 3)]);\n  } // outer rectanlge\n  //up\n\n\n  for (let i = 0; i < col; i++) {\n    nodes.push(grid[0][i]);\n  } //bottom\n\n\n  for (let i = 0; i < col; i++) {\n    nodes.push(grid[row - 1][i]);\n  } //left\n\n\n  for (let i = 0; i < row - 1; i++) {\n    nodes.push(grid[i][1]);\n  } //right\n\n\n  for (let i = 0; i < row - 1; i++) {\n    nodes.push(grid[i][col - 2]);\n  }\n\n  let x = 0;\n  let y = 1;\n  let w = 10;\n\n  while (w) {\n    for (let i = row - 1; i >= 1; i--) {\n      if (i === Math.floor((row - 2) / 4)) continue;\n      if (i === Math.floor((row - 2) / 1.2)) continue;\n      nodes.push(grid[i][x]);\n      x += 1;\n    }\n\n    for (let i = 0; i <= row - 1; i++) {\n      if (i === Math.floor((row - 2) / 4)) continue;\n      if (i === Math.floor((row - 2) / 1.2)) continue;\n      nodes.push(grid[i][y]);\n      y += 1;\n    }\n\n    for (let i = 1; i < row - 2; i++) {\n      if (i === Math.floor((row - 2) / 2)) continue;\n      if (i === Math.floor((row - 2) / 1.2)) continue;\n      nodes.push(grid[i][x]);\n      x += 1;\n    }\n\n    for (let i = row - 3; i > 0; i--) {\n      if (i === Math.floor((row - 2) / 2)) continue;\n      if (i === Math.floor((row - 2) / 1.2)) continue;\n      nodes.push(grid[i][y]);\n      y += 1;\n    }\n\n    w -= 1;\n  }\n\n  return nodes;\n}","map":{"version":3,"sources":["F:/Deerwalk/semester-5/Micro Project/my-project/pathfinding-visualizer-master/src/mazeAlgorithms/maze4.js"],"names":["mazeFour","grid","NUMBER_OF_ROWS","NUMBER_OF_COLS","nodes","row","col","i","Math","floor","push","x","y","w"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,cAAxB,EAAwCC,cAAxC,EAAwD;AAC7D,MAAIC,KAAK,GAAG,EAAZ;AACA,QAAMC,GAAG,GAAGH,cAAZ;AACA,QAAMI,GAAG,GAAGH,cAAZ;;AACA,OAAK,IAAII,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAG,GAAjB,CAAb,EAAoCE,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAG,GAAjB,CAAxC,EAA+DE,CAAC,EAAhE,EAAoE;AAClEH,IAAAA,KAAK,CAACM,IAAN,CAAWT,IAAI,CAACM,CAAD,CAAJ,CAAQC,IAAI,CAACC,KAAL,CAAWH,GAAG,GAAG,CAAjB,CAAR,CAAX;AACD,GAN4D,CAO7D;AACA;;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAApB,EAAyBC,CAAC,EAA1B,EAA8B;AAC5BH,IAAAA,KAAK,CAACM,IAAN,CAAWT,IAAI,CAAC,CAAD,CAAJ,CAAQM,CAAR,CAAX;AACD,GAX4D,CAY7D;;;AACA,OAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAApB,EAAyBC,CAAC,EAA1B,EAA8B;AAC5BH,IAAAA,KAAK,CAACM,IAAN,CAAWT,IAAI,CAACI,GAAG,GAAG,CAAP,CAAJ,CAAcE,CAAd,CAAX;AACD,GAf4D,CAgB7D;;;AACA,OAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,GAAG,CAA1B,EAA6BE,CAAC,EAA9B,EAAkC;AAChCH,IAAAA,KAAK,CAACM,IAAN,CAAWT,IAAI,CAACM,CAAD,CAAJ,CAAQ,CAAR,CAAX;AACD,GAnB4D,CAoB7D;;;AACA,OAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,GAAG,CAA1B,EAA6BE,CAAC,EAA9B,EAAkC;AAChCH,IAAAA,KAAK,CAACM,IAAN,CAAWT,IAAI,CAACM,CAAD,CAAJ,CAAQD,GAAG,GAAG,CAAd,CAAX;AACD;;AACD,MAAIK,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,EAAR;;AACA,SAAOA,CAAP,EAAU;AACR,SAAK,IAAIN,CAAC,GAAGF,GAAG,GAAG,CAAnB,EAAsBE,CAAC,IAAI,CAA3B,EAA8BA,CAAC,EAA/B,EAAmC;AACjC,UAAIA,CAAC,KAAKC,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAG,CAAP,IAAY,CAAvB,CAAV,EAAqC;AACrC,UAAIE,CAAC,KAAKC,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAG,CAAP,IAAY,GAAvB,CAAV,EAAuC;AAEvCD,MAAAA,KAAK,CAACM,IAAN,CAAWT,IAAI,CAACM,CAAD,CAAJ,CAAQI,CAAR,CAAX;AACAA,MAAAA,CAAC,IAAI,CAAL;AACD;;AACD,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,GAAG,GAAG,CAA3B,EAA8BE,CAAC,EAA/B,EAAmC;AACjC,UAAIA,CAAC,KAAKC,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAG,CAAP,IAAY,CAAvB,CAAV,EAAqC;AACrC,UAAIE,CAAC,KAAKC,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAG,CAAP,IAAY,GAAvB,CAAV,EAAuC;AAEvCD,MAAAA,KAAK,CAACM,IAAN,CAAWT,IAAI,CAACM,CAAD,CAAJ,CAAQK,CAAR,CAAX;AACAA,MAAAA,CAAC,IAAI,CAAL;AACD;;AACD,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,GAAG,CAA1B,EAA6BE,CAAC,EAA9B,EAAkC;AAChC,UAAIA,CAAC,KAAKC,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAG,CAAP,IAAY,CAAvB,CAAV,EAAqC;AACrC,UAAIE,CAAC,KAAKC,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAG,CAAP,IAAY,GAAvB,CAAV,EAAuC;AAEvCD,MAAAA,KAAK,CAACM,IAAN,CAAWT,IAAI,CAACM,CAAD,CAAJ,CAAQI,CAAR,CAAX;AACAA,MAAAA,CAAC,IAAI,CAAL;AACD;;AACD,SAAK,IAAIJ,CAAC,GAAGF,GAAG,GAAG,CAAnB,EAAsBE,CAAC,GAAG,CAA1B,EAA6BA,CAAC,EAA9B,EAAkC;AAChC,UAAIA,CAAC,KAAKC,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAG,CAAP,IAAY,CAAvB,CAAV,EAAqC;AACrC,UAAIE,CAAC,KAAKC,IAAI,CAACC,KAAL,CAAW,CAACJ,GAAG,GAAG,CAAP,IAAY,GAAvB,CAAV,EAAuC;AAEvCD,MAAAA,KAAK,CAACM,IAAN,CAAWT,IAAI,CAACM,CAAD,CAAJ,CAAQK,CAAR,CAAX;AACAA,MAAAA,CAAC,IAAI,CAAL;AACD;;AACDC,IAAAA,CAAC,IAAI,CAAL;AACD;;AACD,SAAOT,KAAP;AACD","sourcesContent":["export function mazeFour(grid, NUMBER_OF_ROWS, NUMBER_OF_COLS) {\n  let nodes = [];\n  const row = NUMBER_OF_ROWS;\n  const col = NUMBER_OF_COLS;\n  for (let i = Math.floor(row / 1.8); i < Math.floor(row / 2.8); i++) {\n    nodes.push(grid[i][Math.floor(col / 3)]);\n  }\n  // outer rectanlge\n  //up\n  for (let i = 0; i < col; i++) {\n    nodes.push(grid[0][i]);\n  }\n  //bottom\n  for (let i = 0; i < col; i++) {\n    nodes.push(grid[row - 1][i]);\n  }\n  //left\n  for (let i = 0; i < row - 1; i++) {\n    nodes.push(grid[i][1]);\n  }\n  //right\n  for (let i = 0; i < row - 1; i++) {\n    nodes.push(grid[i][col - 2]);\n  }\n  let x = 0;\n  let y = 1;\n  let w = 10;\n  while (w) {\n    for (let i = row - 1; i >= 1; i--) {\n      if (i === Math.floor((row - 2) / 4)) continue;\n      if (i === Math.floor((row - 2) / 1.2)) continue;\n\n      nodes.push(grid[i][x]);\n      x += 1;\n    }\n    for (let i = 0; i <= row - 1; i++) {\n      if (i === Math.floor((row - 2) / 4)) continue;\n      if (i === Math.floor((row - 2) / 1.2)) continue;\n\n      nodes.push(grid[i][y]);\n      y += 1;\n    }\n    for (let i = 1; i < row - 2; i++) {\n      if (i === Math.floor((row - 2) / 2)) continue;\n      if (i === Math.floor((row - 2) / 1.2)) continue;\n\n      nodes.push(grid[i][x]);\n      x += 1;\n    }\n    for (let i = row - 3; i > 0; i--) {\n      if (i === Math.floor((row - 2) / 2)) continue;\n      if (i === Math.floor((row - 2) / 1.2)) continue;\n\n      nodes.push(grid[i][y]);\n      y += 1;\n    }\n    w -= 1;\n  }\n  return nodes;\n}\n"]},"metadata":{},"sourceType":"module"}