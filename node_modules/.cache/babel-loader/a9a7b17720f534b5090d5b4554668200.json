{"ast":null,"code":"var _jsxFileName = \"F:\\\\Deerwalk\\\\semester-5\\\\Micro Project\\\\pathfinding-visualizer-master\\\\src\\\\pathfindingVisualizer\\\\navbar.jsx\";\nimport React, { Component } from \"react\";\nimport \"./navbar.css\";\nconst brand = window.innerWidth > 600 ? \"Pathfinding Visualizer\" : \"Pathfinder\";\n\nclass NavBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      algorithm: \"Visualize Algorithm\",\n      maze: \"Generate Maze\",\n      pathState: false,\n      mazeState: false,\n      speedState: \"Speed\"\n    };\n  }\n\n  selectAlgorithm(selection) {\n    if (this.props.visualizingAlgorithm) {\n      return;\n    }\n\n    if (selection === this.state.algorithm || this.state.algorithm === \"Visualize Algorithm\" || this.state.algorithm === \"Select an Algorithm!\") {\n      this.setState({\n        algorithm: selection\n      });\n    } else if (this.state.pathState) {\n      this.clearPath();\n      this.setState({\n        algorithm: selection\n      });\n    } else {\n      this.setState({\n        algorithm: selection\n      });\n    }\n  }\n\n  selectMaze(selection) {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    if (selection === this.state.maze || this.state.maze === \"Generate Maze\" || this.state.maze === \"Select a Maze!\") {\n      this.setState({\n        maze: selection\n      });\n    } else if (!this.state.mazeState) {\n      this.setState({\n        maze: selection\n      });\n    } else {\n      this.clearGrid();\n      this.setState({\n        maze: selection\n      });\n    }\n  }\n\n  visualizeAlgorithm() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    if (this.state.pathState) {\n      this.clearTemp();\n      return;\n    }\n\n    if (this.state.algorithm === \"Visualize Algorithm\" || this.state.algorithm === \"Select an Algorithm!\") {\n      this.setState({\n        algorithm: \"Select an Algorithm!\"\n      });\n    } else {\n      this.setState({\n        pathState: true\n      });\n      if (this.state.algorithm === \"Visualize Dijkstra\") this.props.visualizeDijkstra();\n    }\n  }\n\n  generateMaze() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    if (this.state.mazeState || this.state.pathState) {\n      this.clearTemp();\n    }\n\n    if (this.state.maze === \"Generate Maze\" || this.state.maze === \"Select a Maze!\") {\n      this.setState({\n        maze: \"Select a Maze!\"\n      });\n    } else {\n      this.setState({\n        mazeState: true\n      });\n      if (this.state.maze === \"Generate Recursive Maze\") this.props.generateRecursiveDivisionMaze();\n    }\n  }\n\n  clearGrid() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    this.props.clearGrid();\n    this.setState({\n      algorithm: \"Visualize Algorithm\",\n      maze: \"Generate Maze\",\n      pathState: false,\n      mazeState: false\n    });\n  }\n\n  clearPath() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    this.props.clearPath();\n    this.setState({\n      pathState: false,\n      mazeState: false\n    });\n  }\n\n  clearTemp() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    this.props.clearGrid();\n    this.setState({\n      pathState: false,\n      mazeState: false\n    });\n  }\n\n  changeSpeed(speed) {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n\n    let value = [10, 10];\n    if (speed === \"Slow\") value = [50, 30];else if (speed === \"Medium\") value = [25, 20];else if (speed === \"Fast\") value = [10, 10];\n    this.setState({\n      speedState: speed\n    });\n    this.props.updateSpeed(value[0], value[1]);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar navbar-expand navbar-dark bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"navbar-brand h1 mb-0\",\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, \" \", brand), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar-collapse\",\n      id: \"navbarNavDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"navbar-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light dropdown-toggle\",\n      type: \"button\",\n      id: \"dropdownMenu1\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, \"Algorithms\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      \"aria-labelledby\": \"dropdownMenu1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectAlgorithm(\"Visualize Dijkstra\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, \"Dijkstra's Algorithm\"))), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: () => this.visualizeAlgorithm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, this.state.algorithm)), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light dropdown-toggle\",\n      type: \"button\",\n      id: \"dropdownMenu1\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, \"Mazes\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      \"aria-labelledby\": \"dropdownMenu1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.selectMaze(\"Generate Recursive Maze\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }, \"Recursive Division Maze\"))), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: () => this.generateMaze(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, this.state.maze)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: () => this.clearGrid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    }, \"Clear Gird\")), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-item dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-info dropdown-toggle\",\n      type: \"button\",\n      id: \"dropdownMenu1\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, this.state.speedState), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      \"aria-labelledby\": \"dropdownMenu1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.changeSpeed(\"Slow\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 19\n      }\n    }, \"Slow\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.changeSpeed(\"Medium\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    }, \"Medium\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item btn-light\",\n      type: \"button\",\n      onClick: () => this.changeSpeed(\"Fast\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, \"Fast\"))), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }, \"//className=\\\"btn btn-success\\\" onClick=\", \"> Learn More\")))));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["F:/Deerwalk/semester-5/Micro Project/pathfinding-visualizer-master/src/pathfindingVisualizer/navbar.jsx"],"names":["React","Component","brand","window","innerWidth","NavBar","state","algorithm","maze","pathState","mazeState","speedState","selectAlgorithm","selection","props","visualizingAlgorithm","setState","clearPath","selectMaze","generatingMaze","clearGrid","visualizeAlgorithm","clearTemp","visualizeDijkstra","generateMaze","generateRecursiveDivisionMaze","changeSpeed","speed","value","updateSpeed","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./navbar.css\";\n\nconst brand = window.innerWidth > 600 ? \"Pathfinding Visualizer\" : \"Pathfinder\";\n\nclass NavBar extends Component {\n  state = {\n    algorithm: \"Visualize Algorithm\",\n    maze: \"Generate Maze\",\n    pathState: false,\n    mazeState: false,\n    speedState: \"Speed\",\n  };\n\n  selectAlgorithm(selection) {\n    if (this.props.visualizingAlgorithm) {\n      return;\n    }\n    if (\n      selection === this.state.algorithm ||\n      this.state.algorithm === \"Visualize Algorithm\" ||\n      this.state.algorithm === \"Select an Algorithm!\"\n    ) {\n      this.setState({ algorithm: selection });\n    } else if (this.state.pathState) {\n      this.clearPath();\n      this.setState({ algorithm: selection });\n    } else {\n      this.setState({ algorithm: selection });\n    }\n  }\n\n  selectMaze(selection) {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    if (\n      selection === this.state.maze ||\n      this.state.maze === \"Generate Maze\" ||\n      this.state.maze === \"Select a Maze!\"\n    ) {\n      this.setState({ maze: selection });\n    } else if (!this.state.mazeState) {\n      this.setState({ maze: selection });\n    } else {\n      this.clearGrid();\n      this.setState({ maze: selection });\n    }\n  }\n\n  visualizeAlgorithm() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    if (this.state.pathState) {\n      this.clearTemp();\n      return;\n    }\n    if (\n      this.state.algorithm === \"Visualize Algorithm\" ||\n      this.state.algorithm === \"Select an Algorithm!\"\n    ) {\n      this.setState({ algorithm: \"Select an Algorithm!\" });\n    } else {\n      this.setState({ pathState: true });\n      if (this.state.algorithm === \"Visualize Dijkstra\")\n        this.props.visualizeDijkstra();\n    }\n  }\n\n  generateMaze() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    if (this.state.mazeState || this.state.pathState) {\n      this.clearTemp();\n    }\n    if (\n      this.state.maze === \"Generate Maze\" ||\n      this.state.maze === \"Select a Maze!\"\n    ) {\n      this.setState({ maze: \"Select a Maze!\" });\n    } else {\n      this.setState({ mazeState: true });\n      if (this.state.maze === \"Generate Recursive Maze\")\n        this.props.generateRecursiveDivisionMaze();\n    }\n  }\n\n  clearGrid() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    this.props.clearGrid();\n    this.setState({\n      algorithm: \"Visualize Algorithm\",\n      maze: \"Generate Maze\",\n      pathState: false,\n      mazeState: false,\n    });\n  }\n\n  clearPath() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    this.props.clearPath();\n    this.setState({\n      pathState: false,\n      mazeState: false,\n    });\n  }\n\n  clearTemp() {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    this.props.clearGrid();\n    this.setState({\n      pathState: false,\n      mazeState: false,\n    });\n  }\n\n  changeSpeed(speed) {\n    if (this.props.visualizingAlgorithm || this.props.generatingMaze) {\n      return;\n    }\n    let value = [10, 10];\n    if (speed === \"Slow\") value = [50, 30];\n    else if (speed === \"Medium\") value = [25, 20];\n    else if (speed === \"Fast\") value = [10, 10];\n    this.setState({ speedState: speed });\n    this.props.updateSpeed(value[0], value[1]);\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a className=\"navbar-brand h1 mb-0\"\n          href=\"#\" > {brand}</a>\n        <div className=\"navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item dropdown\">\n              <div className=\"dropdown\">\n                <button\n                  className=\"btn btn-light dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenu1\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  Algorithms\n                </button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() => this.selectAlgorithm(\"Visualize Dijkstra\")}\n                  >\n                    Dijkstra's Algorithm\n                  </button>\n                </div>\n              </div>{\" \"}\n            </li>\n            <li>\n              <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                onClick={() => this.visualizeAlgorithm()}\n              >\n                {this.state.algorithm}\n              </button>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <div className=\"dropdown\">\n                <button\n                  className=\"btn btn-light dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenu1\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  Mazes\n                </button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n                  \n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() => this.selectMaze(\"Generate Recursive Maze\")}\n                  >\n                    Recursive Division Maze\n                  </button>\n                  \n                </div>\n              </div>{\" \"}\n            </li>\n            <li>\n              <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                onClick={() => this.generateMaze()}\n              >\n                {this.state.maze}\n              </button>\n            </li>\n            <li>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={() => this.clearGrid()}\n              >\n                Clear Gird\n              </button>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <div className=\"dropdown\">\n                <button\n                  className=\"btn btn-info dropdown-toggle\"\n                  type=\"button\"\n                  id=\"dropdownMenu1\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  {this.state.speedState}\n                </button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() => this.changeSpeed(\"Slow\")}\n                  >\n                    Slow\n                  </button>\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() => this.changeSpeed(\"Medium\")}\n                  >\n                    Medium\n                  </button>\n                  <button\n                    className=\"dropdown-item btn-light\"\n                    type=\"button\"\n                    onClick={() => this.changeSpeed(\"Fast\")}\n                  >\n                    Fast\n                  </button>\n                </div>\n              </div>{\" \"}\n            </li>\n\n            <li>\n              <button\n                type=\"button\">\n                //className=\"btn btn-success\" onClick={}>\n                  Learn More\n              </button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n\n    );\n  }\n}\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}