{"ast":null,"code":"var _jsxFileName = \"F:\\\\Deerwalk\\\\semester-5\\\\Micro Project\\\\pathfinding-visualizer\\\\src\\\\pathfindingVisualizer\\\\Node\\\\node.jsx\";\nimport React, { Component } from \"react\";\nimport \"./node.css\";\n\nclass Node extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      row,\n      col,\n      isStart,\n      isFinish,\n      isWall,\n      isVisited,\n      isShortest,\n      onMouseEnter,\n      onMouseDown,\n      onMouseUp,\n      width,\n      height,\n      numRows,\n      numColumns\n    } = this.props;\n    const extraClass = isStart ? \"node node-start\" : isFinish ? \"node node-finish\" : isWall ? \"node-wall\" : isShortest ? \"node node-shortest-path\" : isVisited ? \"node node-visited\" : \"node\";\n    let cellWidth = Math.floor((width - 15) / numColumns);\n    let cellHeight;\n\n    if (width > 1500) {\n      cellHeight = Math.floor((height - 70) / numRows);\n    } else if (width > 1000) {\n      cellHeight = Math.floor((height - 70) / numRows);\n    } else if (width > 500) {\n      cellHeight = Math.floor((height - 60) / numRows);\n    } else if (width > 0) {\n      cellHeight = Math.floor((height - 50) / numRows);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: `node-${row}-${col}`,\n      className: `${extraClass}`,\n      style: {\n        \"--width\": `${cellWidth}px`,\n        \"--height\": `${cellHeight}px`\n      },\n      onMouseEnter: () => onMouseEnter(row, col),\n      onMouseDown: () => onMouseDown(row, col),\n      onMouseUp: () => onMouseUp(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default Node;","map":{"version":3,"sources":["F:/Deerwalk/semester-5/Micro Project/pathfinding-visualizer/src/pathfindingVisualizer/Node/node.jsx"],"names":["React","Component","Node","constructor","props","state","render","row","col","isStart","isFinish","isWall","isVisited","isShortest","onMouseEnter","onMouseDown","onMouseUp","width","height","numRows","numColumns","extraClass","cellWidth","Math","floor","cellHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,GADI;AAEJC,MAAAA,GAFI;AAGJC,MAAAA,OAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA,MALI;AAMJC,MAAAA,SANI;AAOJC,MAAAA,UAPI;AAQJC,MAAAA,YARI;AASJC,MAAAA,WATI;AAUJC,MAAAA,SAVI;AAWJC,MAAAA,KAXI;AAYJC,MAAAA,MAZI;AAaJC,MAAAA,OAbI;AAcJC,MAAAA;AAdI,QAeF,KAAKhB,KAfT;AAiBA,UAAMiB,UAAU,GAAGZ,OAAO,GACtB,iBADsB,GAEtBC,QAAQ,GACR,kBADQ,GAERC,MAAM,GACN,WADM,GAENE,UAAU,GACV,yBADU,GAEVD,SAAS,GACT,mBADS,GAET,MAVJ;AAYA,QAAIU,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACP,KAAK,GAAG,EAAT,IAAeG,UAA1B,CAAhB;AACA,QAAIK,UAAJ;;AACA,QAAIR,KAAK,GAAG,IAAZ,EAAkB;AAChBQ,MAAAA,UAAU,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACN,MAAM,GAAG,EAAV,IAAgBC,OAA3B,CAAb;AACD,KAFD,MAEO,IAAIF,KAAK,GAAG,IAAZ,EAAkB;AACvBQ,MAAAA,UAAU,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACN,MAAM,GAAG,EAAV,IAAgBC,OAA3B,CAAb;AACD,KAFM,MAEA,IAAIF,KAAK,GAAG,GAAZ,EAAiB;AACtBQ,MAAAA,UAAU,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACN,MAAM,GAAG,EAAV,IAAgBC,OAA3B,CAAb;AACD,KAFM,MAEA,IAAIF,KAAK,GAAG,CAAZ,EAAe;AACpBQ,MAAAA,UAAU,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACN,MAAM,GAAG,EAAV,IAAgBC,OAA3B,CAAb;AACD;;AAED,wBACE;AACE,MAAA,EAAE,EAAG,QAAOZ,GAAI,IAAGC,GAAI,EADzB;AAEE,MAAA,SAAS,EAAG,GAAEa,UAAW,EAF3B;AAGE,MAAA,KAAK,EAAE;AAAE,mBAAY,GAAEC,SAAU,IAA1B;AAA+B,oBAAa,GAAEG,UAAW;AAAzD,OAHT;AAIE,MAAA,YAAY,EAAE,MAAMX,YAAY,CAACP,GAAD,EAAMC,GAAN,CAJlC;AAKE,MAAA,WAAW,EAAE,MAAMO,WAAW,CAACR,GAAD,EAAMC,GAAN,CALhC;AAME,MAAA,SAAS,EAAE,MAAMQ,SAAS,EAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AA1D0B;;AA6D7B,eAAed,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./node.css\";\n\nclass Node extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      row,\n      col,\n      isStart,\n      isFinish,\n      isWall,\n      isVisited,\n      isShortest,\n      onMouseEnter,\n      onMouseDown,\n      onMouseUp,\n      width,\n      height,\n      numRows,\n      numColumns,\n    } = this.props;\n\n    const extraClass = isStart\n      ? \"node node-start\"\n      : isFinish\n      ? \"node node-finish\"\n      : isWall\n      ? \"node-wall\"\n      : isShortest\n      ? \"node node-shortest-path\"\n      : isVisited\n      ? \"node node-visited\"\n      : \"node\";\n\n    let cellWidth = Math.floor((width - 15) / numColumns);\n    let cellHeight;\n    if (width > 1500) {\n      cellHeight = Math.floor((height - 70) / numRows);\n    } else if (width > 1000) {\n      cellHeight = Math.floor((height - 70) / numRows);\n    } else if (width > 500) {\n      cellHeight = Math.floor((height - 60) / numRows);\n    } else if (width > 0) {\n      cellHeight = Math.floor((height - 50) / numRows);\n    }\n\n    return (\n      <div\n        id={`node-${row}-${col}`}\n        className={`${extraClass}`}\n        style={{ \"--width\": `${cellWidth}px`, \"--height\": `${cellHeight}px` }}\n        onMouseEnter={() => onMouseEnter(row, col)}\n        onMouseDown={() => onMouseDown(row, col)}\n        onMouseUp={() => onMouseUp()}\n      ></div>\n    );\n  }\n}\n\nexport default Node;\n"]},"metadata":{},"sourceType":"module"}